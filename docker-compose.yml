services:
  dev:
    build:
      context: .
      dockerfile: docker/Dockerfile.dev.pytorch
      args:
        UV_EXTRA: ${UV_EXTRA:-cpu}  # Change to cu128 for CUDA support
        WORKSPACE_DIR: ${WORKSPACE_DIR:-/workspaces/eng-ai-agents}
        WORKSPACE_USER: ${WORKSPACE_USER:-vscode}
    container_name: ${CONTAINER_NAME:-eng-ai-agents-dev}
    ports:
      - "${QUARTO_PORT:-4100}:4100"  # Quarto preview port
      - "${JUPYTER_PORT:-8888}:8888"  # Jupyter notebook port
      - "${DEV_PORT:-8000}:8000"  # Additional development port
    volumes:
      - .:${WORKSPACE_DIR:-/workspaces/eng-ai-agents}
    working_dir: ${WORKSPACE_DIR:-/workspaces/eng-ai-agents}
    environment:
      - PATH=${WORKSPACE_DIR:-/workspaces/eng-ai-agents}/.venv/bin:$PATH
      - PYTHONPATH=${WORKSPACE_DIR:-/workspaces/eng-ai-agents}
      - VIRTUAL_ENV=${WORKSPACE_DIR:-/workspaces/eng-ai-agents}/.venv
      - UV_CACHE_DIR=/home/${WORKSPACE_USER:-vscode}/.uv-cache
      - UV_EXTRA=${UV_EXTRA:-cpu}
    env_file:
      - path: .env
        required: true
    command: bash -c "tail -f /dev/null"
    stdin_open: true
    tty: true
    networks:
      - ai-agents-network

  # ##########
  # # Vector Database
  # ##########
  # qdrant:
  #   image: qdrant/qdrant:latest
  #   ports:
  #     - "6333:6333"
  #     - "6334:6334"
  #   volumes:
  #     - ./qdrant_storage:/qdrant/storage:z
  #   environment:
  #     - IMAGE_DIR=/qdrant/images  # Optional: Configure the directory in Qdrant if needed
  #   networks:
  #     -  ai-agents-network

networks:
  ai-agents-network:
    driver: bridge
